# Vector que tiene todas las distancias
x = a$`Flight Distance`
x %>% list
# Criterios
c1 = x[x<350]
c2 = x[x>350&x<700]
c3 =  x[700>x&<1050]
c1 = x[x<350]
c2 = x[x>350&x<700]
c3 = x[x>700&x<1050]
c4 = x[x>1050&x<1400]
c5 = x[x>1400&x<1750]
c6 = x[x>1750&x<2100]
c7 = x[x>2100<x<2450]
# Criterios
c1 = x[x<350]
c2 = x[x>350&x<700]
c3 = x[x>700&x<1050]
c4 = x[x>1050&x<1400]
c5 = x[x>1400&x<1750]
c6 = x[x>1750&x<2100]
c7 = x[x>2100&x<2450]
c8 = x[x>2450]
barplot(c1,c2)
barplot(c1,c2)
c1 = x[x<350] %>% length()
c2 = x[x>350&x<700] %>% length()
c3 = x[x>700&x<1050]%>% length()
c4 = x[x>1050&x<1400]%>% length()
c5 = x[x>1400&x<1750]%>% length()
c6 = x[x>1750&x<2100]%>% length()
c7 = x[x>2100&x<2450]%>% length()
c8 = x[x>2450]%>% length()
barplot(c1,c2)
barplot(c1,c2, c3)
c1
c2
c3
c4
c5
c6
c7
c8
c(c1,c2, c3,c4,c5,c6,c7,c8)
a = c(c1,c2, c3,c4,c5,c6,c7,c8)
a/100
a/100 %>% plot()
a/100 %>% plot(, type = 'l')
a
barplot(a)
x %>% hist()
# Vector que tiene todas las distancias
x = a$`Flight Distance`
# Vector que tiene todas las distancias
x = a$`Flight Distance`
library(readr)
a <- read_csv("Bases a trabajar/train.csv")
df = data.frame(a$`Flight Distance`,)
# Vector que tiene todas las distancias
x = a$`Flight Distance`
x %>% list
# Criterios
c1 = x[x<350] %>% length()
c2 = x[x>350&x<700] %>% length()
c3 = x[x>700&x<1050]%>% length()
c4 = x[x>1050&x<1400]%>% length()
c5 = x[x>1400&x<1750]%>% length()
c6 = x[x>1750&x<2100]%>% length()
c7 = x[x>2100&x<2450]%>% length()
c8 = x[x>2450&x<2800]%>% length()
c9 = x[x>2800]%>% length()
# Por categorias
z = c(c1,c2, c3,c4,c5,c6,c7,c8, c9)
barplot(a)
# Por categorias
z = c(c1,c2, c3,c4,c5,c6,c7,c8, c9)
barplot(z)
c9
c8
# Por categorias
z = c(c1,c2, c3,c4,c5,c6,c7,c8, c9)
barplot(z)
# En general
x %>% hist()
x %>% hist(, xlab('Pasajeros'))
x %>% hist(, xlab('Pasajeros'))
x %>% hist() %>%  xlab('Pasajeros')
hist(x, xlab = ''pasajeros)
hist(x, xlab = 'pasajeros')
hist(x, ylab = 'pasajeros')
hist(x, ylab = 'pasajeros', xlab ='Distancia en millas')
require(ggplot2)
# Custom Binning. I can just give the size of the bin
ggplot(x, aes(x=x)) + geom_histogram(binwidth = 0.05)
# Custom Binning. I can just give the size of the bin
ggplot(x %>% as.data.frame(), aes(x=x)) + geom_histogram(binwidth = 0.05)
a <- read_csv("Bases a trabajar/train.csv")
# Custom Binning. I can just give the size of the bin
ggplot(a, aes(x=a$`Flight Distance`)) + geom_histogram(binwidth = 0.05)
# Custom Binning. I can just give the size of the bin
grafico = ggplot(a, aes(x=a$`Flight Distance`)) + geom_histogram(binwidth = 0.05)
grafico
saveRDS(grafico,file = ''png)
saveRDS(grafico,file = 'png')
# Custom Binning. I can just give the size of the bin
grafico = ggplot(a, aes(x=a$`Flight Distance`)) + geom_histogram(binwidth = 0.05)
grafico
# Custom Binning. I can just give the size of the bin
grafico = ggplot(x %>% as.data.frame, aes(x=x)) + geom_histogram(binwidth = 0.05)
grafico
data = data.frame(
name = c('To 350', '350-700', '700-1050','1050-1400','1400-1750','2100-2450','2450-2800', '>2800')
)
data = data.frame(
name = c('To 350', '350-700', '700-1050','1050-1400','1400-1750','2100-2450','2450-2800', '>2800'),
value = z
)
z %>% length(
z %>% length()
z %>% length()
z %>% length()
data = data.frame(
name = c('350<', '350-700', '700-1050','1050-1400','1400-1750','1750-2100','2100-2450','2450-2800', '>2800',),
value = z %>% length()
)
data = data.frame(
name = c('350<', '350-700','700-1050','1050-1400','1400-1750','1750-2100','2100-2450','2450-2800', '>2800',),
value = z %>% length()
)
data = data.frame(
name = c('350<', '350-700','700-1050','1050-1400','1400-1750',"'1750-2100'",'2100-2450','2450-2800', '>2800',),
value = z %>% length()
)
data = data.frame(
name = c('350<', '350-700','700-1050','1050-1400','1400-1750','1750-2100','2100-2450','2450-2800', '>2800',)
value = z %>% length()
data = data.frame(
name = c('350<', '350-700','700-1050','1050-1400','1400-1750','1750-2100','2100-2450','2450-2800', '>2800',),
value = z
)
data = data.frame(
name = c('350<', '350-700','700-1050','1050-1400','1400-1750','1750-2100','2100-2450','2450-2800', '>2800',),  value = z)
data = data.frame(
name = c('350<', '350-700','700-1050','1050-1400','1400-1750','1750-2100','2100-2450','2450-2800', '>2800',),  value = z)
data = data.frame(
name = c('350<', '350-700','700-1050','1050-1400','1400-1750','1750-2100','2100-2450','2450-2800', '>2800'),  value = z)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
install.packages(forcats)
install.packages("forcats")
require(forcats)
data %>% mutate(name = fct_reorder(name,value))
#barplot
data %>% mutate(name = fct_reorder(name,value)) %>% ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
data %>% mutate(name = fct_reorder(name,value))
data %<>% mutate(name = fct_reorder(name,value))
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
data %<>% mutate(name = fct_relevel(name,'350<', '350-700','700-1050','1050-1400','1400-1750','1750-2100','2100-2450','2450-2800', '>2800'))
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", color = "blue", fill = rgb(0.1,0.4,0.5,0.7))
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", color = "blue", fill = rgb(0.1,0.4,0.5,0.2))
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", color = "blue")
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", color = "blue", fill = "blue")
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", color = "blue", fill = "blue")+scale_fill_hue(c = 40)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", color = "blue", fill = "blue")+scale_fill_hue(c = 40) + xlab('Smith')+ylab("chupelo")
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", color = "blue", fill = "blue")+scale_fill_hue(c = 40) + xlab('Smith')+ylab("chupelo")+
ggtitle('TITULO')
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", color = "blue", fill = "blue")+scale_fill_hue(c = 40) + xlab('Miles/Flight')+ylab("Passengers 2022")+
ggtitle('Passengers vs Flight Mils')
bd <- read_excel("Bases a trabajar/Informe_Accidentes_Incidentes_organizado.xlsx")
bd %<>% clean_names()
bd <- read_excel("Informe_Accidentes_Incidentes_organizado.xlsx")
a <- read_csv("train.csv")
bd <- read_excel("Informe_Accidentes_Incidentes_organizado.xlsx")
bd %<>% clean_names()
bd$tipo_de_accidente =bd$tipo_de_accidente %>% as.factor()
library(readr)
a <- read_csv("train.csv")
df = data.frame(a$`Flight Distance`,)
df = data.frame(a$`Flight Distance`)
# Barplot
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity", color = "blue", fill = "blue")+scale_fill_hue(c = 40) + xlab('Miles/Flight')+ylab("Passengers 2022 Q1")+
ggtitle('Passengers vs Flight Miles')
c2
z
total = sum(z)
total
porcentaje = z/total
porcentaje = z/total %>% round(3)
require(tidyverse)
library(readxl)
require(janitor)
require(magrittr)
require(ggplot2)
require(kableExtra)
porcentaje %>% kable()
porcentaje %>% kable_classic()
total = sum(z)
porcentaje = z/total %>% round(3)
porcentaje %>% kable_classic()
porcentaje = z/total %>% round(3) %>% as.data.frame()
porcentaje %>% k
porcentaje %>% kable()
porcentaje = z/total %>% round(3) %>% as.data.frame()
porcentaje
porcentaje = z/total %>% round(3) %>%
porcentaje %>% kable()
porcentaje = z/total %>% round(3)
porcentaje
porcentaje = z/total %>% round(3)
porcentaje
porcentaje = z/total %>% round(digits = 3)
porcentaje
porcentaje = z/total %<>% round(digits = 3)
porcentaje
porcentaje <%>%round()
porcentaje %<>% round()
porcentaje
porcentaje = round(porcentaje,3)
porcentaje
porcentaje = z/total
porcentaje
porcentaje %>% sum()
porcentaje
porcentaje = round(porcentaje,3)
porcentaje %>% kable()
tabla = table(porcentaje)
tabla = table(round(porcentaje,digits = 3))
names(tabla) = c("Porcentajes")
tabla
tabla = table(round(porcentaje,digits = 3))
tabla = table(porcentaje)
names(tabla) = c("Porcentajes")
tabla
total = sum(z)
porcentaje = z/total
porcentaje
porcentaje = round(porcentaje,3)
tabla = table(porcentaje)
names(tabla) = c("Porcentajes")
tabla
total = sum(z)
porcentaje = z/total
porcentaje
porcentaje = round(porcentaje,3)
tabla = table(porcentaje)
tabla
tabla
total = sum(z)
porcentaje = z/total
porcentaje
porcentaje %>% as.matrix(ncol =1,nrow=9)
porcentaje %>% as.matrix(ncol =1,nrow=9) %>% kable
porcentaje %>% as.matrix(ncol =1,nrow=9) %>% as.data.frame()
porcentaje %>% as.matrix(ncol =1,nrow=9) %>% as.data.frame(,colnames = "a")
porcentaje %>% as.matrix(ncol =1,nrow=9) %>% as.data.frame(colnames = "a")
porcentaje %<>% as.matrix(ncol =1,nrow=9) %>% as.data.frame()
porcentaje
porcentaje %>% round()
round(porcentaje,3)
porcentaje = round(porcentaje,3)
porcentaje
names(porcentaje)= c("Porcentajes")
porcentaje %>% kable()
plot(porcentaje)
barplot(porcentaje)
barplot(porcentaje)
barplot(porcentaje$Porcentajes)
smith = data.frame(x= data$name, y = porcentaje$Porcentajes)
smith
smith = data.frame(x= data$name, y = porcentaje$Porcentajes)
smith %>% arrange(y) %>% mutate(x=factor(x,x))
#plot
p = ggplot(smith,aes(x=x,y=y))+
geom_segment(aes(x=x,xend=x, y=0,yend=y),
color=ifelse(data$x %in% c("A","D"), "orange", "grey"),
size=ifelse(data$x %in% c("A","D"), 1.3, 0.7)
) + geom_point(    color=ifelse(smith$x %in% c("A","D"), "orange", "grey"),
size=ifelse(smith$x %in% c("A","D"), 5, 2))+
theme_ipsum() +
coord_flip() +
theme(
legend.position="none"
) +
xlab("") +
ylab("Value of Y") +
ggtitle("How did groups A and D perform?")
require(tidyverse)
library(readxl)
library(ggplot2)
library(dplyr)
library(hrbrthemes)
install.packages("hbrthemes")
install.packages("C:/Users/jgarcia/Downloads/hrbrthemes_0.8.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/jgarcia/Downloads/hrbrthemes_0.8.0.tar.gz", repos = NULL, type = "source")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
p = ggplot(smith,aes(x=x,y=y))+
geom_segment(aes(x=x,xend=x, y=0,yend=y),
color=ifelse(data$x %in% c("A","D"), "orange", "grey"),
size=ifelse(data$x %in% c("A","D"), 1.3, 0.7)
) + geom_point(    color=ifelse(smith$x %in% c("A","D"), "orange", "grey"),
size=ifelse(smith$x %in% c("A","D"), 5, 2))+
theme_ipsum() +
coord_flip() +
theme(
legend.position="none"
) +
xlab("") +
ylab("Value of Y") +
ggtitle("How did groups A and D perform?")
require(tidyverse)
library(readxl)
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(hbrthemes)
install.packages("hbrthemes")
install.packages("hrbrthemes")
library(hrbrthemes)
smith = data.frame(x= data$name, y = porcentaje$Porcentajes)
smith %>% arrange(y) %>% mutate(x=factor(x,x))
#plot
p = ggplot(smith,aes(x=x,y=y))+
geom_segment(aes(x=x,xend=x, y=0,yend=y),
color=ifelse(data$x %in% c("A","D"), "orange", "grey"),
size=ifelse(data$x %in% c("A","D"), 1.3, 0.7)
) + geom_point(    color=ifelse(smith$x %in% c("A","D"), "orange", "grey"),
size=ifelse(smith$x %in% c("A","D"), 5, 2))+
theme_ipsum() +
coord_flip() +
theme(
legend.position="none"
) +
xlab("") +
ylab("Value of Y") +
ggtitle("How did groups A and D perform?")
smith = data.frame(x= data$name, y = porcentaje$Porcentajes)
smith %>% arrange(y) %>% mutate(x=factor(x,x))
#plot
p = ggplot(smith,aes(x=x,y=y))+
geom_segment(aes(x=x,xend=x, y=0,yend=y),
color=ifelse(data$x %in% c("A","D"), "orange", "grey"),
size=ifelse(data$x %in% c("A","D"), 1.3, 0.7)
) + geom_point(    color=ifelse(smith$x %in% c("A","D"), "orange", "grey"),
size=ifelse(smith$x %in% c("A","D"), 5, 2))+
theme_ipsum() +
coord_flip() +
theme(
legend.position="none"
) +
xlab("") +
ylab("Value of Y") +
ggtitle("How did groups A and D perform?")
smith = data.frame(x= data$name, y = porcentaje$Porcentajes)
smith
smith
smith = data.frame(x= data$name, y = porcentaje$Porcentajes)
#plot
p = ggplot(smith,aes(x=x,y=y))+
geom_segment(aes(x=x,xend=x, y=0,yend=y),
color=ifelse(data$x %in% c("A","D"), "orange", "grey"),
size=ifelse(data$x %in% c("A","D"), 1.3, 0.7)
) + geom_point(    color=ifelse(smith$x %in% c("A","D"), "orange", "grey"),
size=ifelse(smith$x %in% c("A","D"), 5, 2))+
theme_ipsum() +
coord_flip() +
theme(
legend.position="none"
) +
xlab("") +
ylab("Value of Y") +
ggtitle("How did groups A and D perform?")
p
#plot
p = ggplot(smith,aes(x=x,y=y))+
geom_segment(aes(x=x,xend=x, y=0,yend=y),
color=ifelse(data$x %in% c("A","D"), "orange", "grey"),
size=ifelse(data$x %in% c("A","D"), 1.3, 0.7)
) + geom_point(    color=ifelse(smith$x %in% c("A","D"), "orange", "grey")
p
#plot
p = ggplot(smith,aes(x=x,y=y))+
geom_segment(aes(x=x,xend=x, y=0,yend=y),
color=ifelse(data$x %in% c("A","D"), "orange", "grey"),
size=ifelse(data$x %in% c("A","D"), 1.3, 0.7)
) + geom_point(    color=ifelse(smith$x %in% c("A","D"), "orange", "grey"))
p
#plot
smith %>%
filter(!is.na(y)) %>%
arrange(y) %>%
tail(20) %>%
mutate(x=factor(x, x)) %>%
ggplot( aes(x=x, y=y) ) +
geom_segment( aes(x=x ,xend=y, y=0, yend=y), color="grey") +
geom_point(size=3, color="#69b3a2") +
coord_flip() +
theme_ipsum() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)")
smith %>%
filter(!is.na(y)) %>%
arrange(y) %>%
tail(20) %>%
mutate(x=factor(x, x)) %>%
ggplot( aes(x=x, y=y) ) +
geom_segment( aes(x=x ,xend=y, y=0, yend=y), color="grey") +
geom_point(size=3, color="blue") +
coord_flip() +
theme_ipsum() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)")
#plot
smith %>%
filter(!is.na(y)) %>%
arrange(y) %>%
tail(20) %>%
mutate(x=factor(x, x)) %>%
ggplot( aes(x=x, y=y) ) +
geom_segment( aes(x=x ,xend=y, y=0, yend=y), color="grey") +
geom_point(size=3, color="#69b3a2") +
theme_ipsum() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Weapon quantity (SIPRI trend-indicator value)")
#plot
smith %>%
filter(!is.na(y)) %>%
arrange(y) %>%
tail(20) %>%
mutate(x=factor(x, x)) %>%
ggplot( aes(x=x, y=y) ) +
geom_segment( aes(x=x ,xend=y, y=0, yend=y), color="grey") +
geom_point(size=3, color="#69b3a2") +
coord_flip() +
theme_ipsum() +
theme(
panel.grid.minor.y = element_blank(),
panel.grid.major.y = element_blank(),
legend.position="none"
) +
xlab("") +
ylab("Porcentaje")
# Barplot
ggplot(smith, aes(x=x, y=y)) +
geom_bar(stat = "identity", color = "blue", fill = "blue")+scale_fill_hue(c = 40) + xlab('Miles/Flight')+ylab("porcentaje")+
ggtitle('j')
# Barplot
ggplot(smith, aes(x=x, y=y)) +
geom_point(stat = "identity", color = "blue", fill = "blue")+scale_fill_hue(c = 40) + xlab('Miles/Flight')+ylab("porcentaje")+
ggtitle('Porcentaje por categoria')
# Barplot
ggplot(smith, aes(x=x, y=y)) +
geom_point(size=3, color="#69b3a2")+scale_fill_hue(c = 40) + xlab('Miles/Flight')+ylab("porcentaje")+
ggtitle('Porcentaje por categoria')
# Barplot
ggplot(smith, aes(x=x, y=y)) +
geom_point(size=3, color="#69b3a2")+scale_fill_hue(c = 40) + xlab('Miles/Flight')+ylab("porcentaje")+
ggtitle('Porcentaje por categoria')+
geom_text(aes(label = y), color = "black", size = 3)
# Barplot
ggplot(smith, aes(x=x, y=y)) +
geom_point(size=10, color="#69b3a2")+scale_fill_hue(c = 40) + xlab('Miles/Flight')+ylab("porcentaje")+
ggtitle('Porcentaje por categoria')+
geom_text(aes(label = y), color = "black", size = 3)
# Barplot
ggplot(smith, aes(x=x, y=y)) +
geom_segment( aes(xend=x, yend=0))+
geom_point(size=10, color="#69b3a2")+scale_fill_hue(c = 40) + xlab('Miles/Flight')+ylab("porcentaje")+
ggtitle('Porcentaje por categoria')+
geom_text(aes(label = y), color = "black", size = 3)
